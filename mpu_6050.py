from mpu6050 import mpu6050import timeimport numpy as npimport RPi.GPIO as GPIOimport spidevimport os# Function to read SPI data from MCP3008 chip# Channel must be an integer 0-7def ReadChannel(channel):  adc = spi.xfer2([1,(8+channel)<<4,0])  data = ((adc[1]&3) << 8) + adc[2]  return data# Read data from i2c. If it fails, try again. If it fails again, return 'X'# Address must be the address of the registors of the MPU6050:# 0x3B = Accel X# 0x3D = Accel Y# 0x3F = Accel Z# 0x43 = Gyro X# 0x45 = Gyro Y# 0x47 = Gyro Zdef add_data (address):    try:        data = str(mpu.read_i2c_word(address))    except OSError:        try:            data = str(mpu.read_i2c_word(address))        except OSError:            data = 'X'    return data# Read data from mpu6050. If it fails to conect, try again. If it fails again, return ",X,X,X,X,X,X"# old_gpio must be the gpio of the last sensor# new_gpio must be the gpio of the new sensordef add_data_sample (old_gpio, new_gpio):    GPIO.output(old_gpio,0)    GPIO.output(new_gpio,1)    try:        mpu.bus.write_byte_data(0x69, 0x6B, 0x00)        line = ','+add_data(0x3B)+','+add_data(0x3D)+','+add_data(0x3F)+','+add_data(0x43)+','+add_data(0x45)+','+add_data(0x47)    except OSError:        try:            mpu.bus.write_byte_data(0x69, 0x6B, 0x00)            line = ','+add_data(0x3B)+','+add_data(0x3D)+','+add_data(0x3F)+','+add_data(0x43)+','+add_data(0x45)+','+add_data(0x47)        except OSError:            line = ",X,X,X,X,X,X"    return line# Definitionsaccel_scale = 16384.0gyro_scale = 131.0calibration_samples = 100trial_samples = 12000# Initializing GPIOprint('Initializing. Please, keep your hand on an flat surface and the fingers together.', end='')GPIO.setwarnings(False)GPIO.setmode(GPIO.BCM)GPIO.setup(12,GPIO.OUT) #mindinhoGPIO.setup(21,GPIO.OUT) #anelarGPIO.setup(20,GPIO.OUT) #medioGPIO.setup(6,GPIO.OUT)  #indicadorGPIO.setup(15,GPIO.OUT)  #costasGPIO.setup(26,GPIO.OUT)  #dedao#GPIO.setup(18,GPIO.OUT)  #pulsoGPIO.output(12,1)GPIO.output(21,0)GPIO.output(20,0)GPIO.output(6,0)GPIO.output(15,0)GPIO.output(26,0)#GPIO.output(18,0)#Initializing MPUmpu = mpu6050(0x69)mpu.set_accel_range(mpu.ACCEL_RANGE_2G)mpu.set_gyro_range(mpu.GYRO_RANGE_250DEG)#Initializing SPI busspi = spidev.SpiDev()spi.open(0,0)spi.max_speed_hz=1000000# Initializing File# Open a file where the number of the data sample is saved and add it f = open('/home/pi/file_numbers.txt', 'r')file_number = f.read()f.close()f = open('/home/pi/file_numbers.txt', 'w')f.write(str(int(file_number)+1))f.close()f = open('/home/pi/Calibration_'+file_number, "a")#Calibrating MPUtime.sleep(1)print('.', end='')time.sleep(1)print('.', end='')time.sleep(1)print('.')print("Calibrating...")error_flag = Trueinitial_time = time.time()    for i in range(calibration_samples):    f.write(str(ReadChannel(0))+','+str(ReadChannel(1))+add_data_sample(26,12)+add_data_sample(12,21)+add_data_sample(21,20)+add_data_sample(20,6)+add_data_sample(6,15)+add_data_sample(15,26)+','+str(time.time())+'\n')sample_rate = calibration_samples/(time.time()-initial_time)f.close()print('Sample rate = '+str(sample_rate)[:5]+'Hz')# Data Loopf = open('/home/pi/Trial_'+file_number, "a")for i in range(trial_samples):    f.write(str(ReadChannel(0))+','+str(ReadChannel(1))+add_data_sample(26,12)+add_data_sample(12,21)+add_data_sample(21,20)+add_data_sample(20,6)+add_data_sample(6,15)+add_data_sample(15,26)+','+str(time.time())+'\n')f.close()